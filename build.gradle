plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.0"
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

allure {
    autoconfigure = true
    version = '2.13.8'  // Latest Allure Version

    useJUnit5 {
        version = '2.13.8' // Latest Allure Version
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation "com.codeborne:selenide:5.19.0"
    implementation "io.qameta.allure:allure-java-commons:2.13.8"
    implementation "io.qameta.allure:allure-selenide:2.13.8"
    implementation "com.github.javafaker:javafaker:1.0.2"
    implementation "org.hamcrest:hamcrest-all:1.3"
    implementation "org.aeonbits.owner:owner:1.0.12"

    implementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    implementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

tasks.withType(Test) {
    systemProperties += System.properties

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}

test {
    useJUnitPlatform()
}
task positive(type: Test) {
    useJUnitPlatform {
        includeTags 'positive'
    }
}
task negative(type: Test) {
    useJUnitPlatform {
        includeTags 'negative'
    }
}

